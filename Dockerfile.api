#Build:
#export $(cat .env-keys | xargs) && docker build --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY -f Dockerfile.api -t titanic-api .

#Run:
#docker run -p 8000:8000 titanic-api

# --- Build stage: run tests ---
FROM python:3.11-slim as build
WORKDIR /app
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install --no-cache-dir fastapi uvicorn python-multipart psutil pytest pytest-asyncio httpx
COPY . .
RUN pytest tests/ -v

# --- Final stage: production image ---
FROM python:3.11-slim
WORKDIR /app
COPY requirements.txt ./
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ENV AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
ENV AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install --no-cache-dir fastapi uvicorn python-multipart psutil dvc[s3]
COPY . .

# DVC S3 credentials for pulling model/data now handled at runtime
RUN useradd --create-home --shell /bin/bash apiuser && chown -R apiuser:apiuser /app
USER apiuser
EXPOSE 8000
ENV PYTHONPATH=/app
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
CMD bash -c 'dvc pull --force && exec uvicorn api.main:app --host 0.0.0.0 --port 8000'